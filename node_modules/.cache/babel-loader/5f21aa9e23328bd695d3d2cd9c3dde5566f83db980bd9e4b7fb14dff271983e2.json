{"ast":null,"code":"import _taggedTemplateLiteral from\"/workspaces/Sudoku-solver-with-Ai/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import styled from'styled-components';import SudokuCell from'./SudokuCell';import{jsx as _jsx}from\"react/jsx-runtime\";const GridContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(9, 1fr);\\n  grid-template-rows: repeat(9, 1fr);\\n  width: 100%;\\n  max-width: 450px;\\n  aspect-ratio: 1 / 1;\\n  border: 3px solid #333;\\n  box-sizing: border-box;\\n  border-radius: 0.5rem;\\n  overflow: hidden;\\n\"])));const SudokuGrid=_ref=>{let{board,originalBoard,onCellChange}=_ref;const handleCellChange=(row,col,value)=>{// Only allow single digit numbers from 1-9\nif(value.length>1){value=value.slice(0,1);}const numValue=parseInt(value);if(isNaN(numValue)||numValue<1||numValue>9){onCellChange(row,col,0);}else{onCellChange(row,col,numValue);}};const handleKeyDown=(e,row,col)=>{if((e.key==='Backspace'||e.key==='Delete')&&e.target.value===''){onCellChange(row,col,0);}};return/*#__PURE__*/_jsx(GridContainer,{children:board.map((row,rowIndex)=>row.map((cell,colIndex)=>/*#__PURE__*/_jsx(SudokuCell,{value:cell,isPrefilled:originalBoard[rowIndex][colIndex]!==0,onChange:value=>handleCellChange(rowIndex,colIndex,value),onKeyDown:e=>handleKeyDown(e,rowIndex,colIndex)},\"\".concat(rowIndex,\"-\").concat(colIndex))))});};export default SudokuGrid;","map":{"version":3,"names":["React","styled","SudokuCell","jsx","_jsx","GridContainer","div","_templateObject","_taggedTemplateLiteral","SudokuGrid","_ref","board","originalBoard","onCellChange","handleCellChange","row","col","value","length","slice","numValue","parseInt","isNaN","handleKeyDown","e","key","target","children","map","rowIndex","cell","colIndex","isPrefilled","onChange","onKeyDown","concat"],"sources":["/workspaces/Sudoku-solver-with-Ai/src/components/SudokuGrid.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport SudokuCell from './SudokuCell';\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(9, 1fr);\n  grid-template-rows: repeat(9, 1fr);\n  width: 100%;\n  max-width: 450px;\n  aspect-ratio: 1 / 1;\n  border: 3px solid #333;\n  box-sizing: border-box;\n  border-radius: 0.5rem;\n  overflow: hidden;\n`;\n\nconst SudokuGrid = ({ board, originalBoard, onCellChange }) => {\n  const handleCellChange = (row, col, value) => {\n    // Only allow single digit numbers from 1-9\n    if (value.length > 1) {\n      value = value.slice(0, 1);\n    }\n    \n    const numValue = parseInt(value);\n    if (isNaN(numValue) || numValue < 1 || numValue > 9) {\n      onCellChange(row, col, 0);\n    } else {\n      onCellChange(row, col, numValue);\n    }\n  };\n\n  const handleKeyDown = (e, row, col) => {\n    if ((e.key === 'Backspace' || e.key === 'Delete') && e.target.value === '') {\n      onCellChange(row, col, 0);\n    }\n  };\n\n  return (\n    <GridContainer>\n      {board.map((row, rowIndex) =>\n        row.map((cell, colIndex) => (\n          <SudokuCell\n            key={`${rowIndex}-${colIndex}`}\n            value={cell}\n            isPrefilled={originalBoard[rowIndex][colIndex] !== 0}\n            onChange={(value) => handleCellChange(rowIndex, colIndex, value)}\n            onKeyDown={(e) => handleKeyDown(e, rowIndex, colIndex)}\n          />\n        ))\n      )}\n    </GridContainer>\n  );\n};\n\nexport default SudokuGrid;\n"],"mappings":"2JAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,aAAa,CAAGJ,MAAM,CAACK,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,+QAW/B,CAED,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAA4C,IAA3C,CAAEC,KAAK,CAAEC,aAAa,CAAEC,YAAa,CAAC,CAAAH,IAAA,CACxD,KAAM,CAAAI,gBAAgB,CAAGA,CAACC,GAAG,CAAEC,GAAG,CAAEC,KAAK,GAAK,CAC5C;AACA,GAAIA,KAAK,CAACC,MAAM,CAAG,CAAC,CAAE,CACpBD,KAAK,CAAGA,KAAK,CAACE,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAC3B,CAEA,KAAM,CAAAC,QAAQ,CAAGC,QAAQ,CAACJ,KAAK,CAAC,CAChC,GAAIK,KAAK,CAACF,QAAQ,CAAC,EAAIA,QAAQ,CAAG,CAAC,EAAIA,QAAQ,CAAG,CAAC,CAAE,CACnDP,YAAY,CAACE,GAAG,CAAEC,GAAG,CAAE,CAAC,CAAC,CAC3B,CAAC,IAAM,CACLH,YAAY,CAACE,GAAG,CAAEC,GAAG,CAAEI,QAAQ,CAAC,CAClC,CACF,CAAC,CAED,KAAM,CAAAG,aAAa,CAAGA,CAACC,CAAC,CAAET,GAAG,CAAEC,GAAG,GAAK,CACrC,GAAI,CAACQ,CAAC,CAACC,GAAG,GAAK,WAAW,EAAID,CAAC,CAACC,GAAG,GAAK,QAAQ,GAAKD,CAAC,CAACE,MAAM,CAACT,KAAK,GAAK,EAAE,CAAE,CAC1EJ,YAAY,CAACE,GAAG,CAAEC,GAAG,CAAE,CAAC,CAAC,CAC3B,CACF,CAAC,CAED,mBACEZ,IAAA,CAACC,aAAa,EAAAsB,QAAA,CACXhB,KAAK,CAACiB,GAAG,CAAC,CAACb,GAAG,CAAEc,QAAQ,GACvBd,GAAG,CAACa,GAAG,CAAC,CAACE,IAAI,CAAEC,QAAQ,gBACrB3B,IAAA,CAACF,UAAU,EAETe,KAAK,CAAEa,IAAK,CACZE,WAAW,CAAEpB,aAAa,CAACiB,QAAQ,CAAC,CAACE,QAAQ,CAAC,GAAK,CAAE,CACrDE,QAAQ,CAAGhB,KAAK,EAAKH,gBAAgB,CAACe,QAAQ,CAAEE,QAAQ,CAAEd,KAAK,CAAE,CACjEiB,SAAS,CAAGV,CAAC,EAAKD,aAAa,CAACC,CAAC,CAAEK,QAAQ,CAAEE,QAAQ,CAAE,KAAAI,MAAA,CAJ/CN,QAAQ,MAAAM,MAAA,CAAIJ,QAAQ,CAK7B,CACF,CACH,CAAC,CACY,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAtB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}